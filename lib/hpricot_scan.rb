module Hpricot
    class ParseError < StandardError; end

    class << self
        attr_accessor :buffer_size

        def scan(source, &block)
            HpricotScanner.new.hpricot_scan(source,&block)
        end
    end
end

class HpricotScanner
    NO_WAY_SERIOUSLY = "*** This should not happen, please send a bug report with the HTML you're parsing to why@whytheluckystiff.net.  So sorry!"
    DEFAULT_BUFFER_SIZE = 16384

    SINGLE_QUOTE = ?'
    DOUBLE_QUOTE = ?"

    def initialize
        @cs        = nil
        @act       = nil
        @have      = 0
        @nread     = 0
        @curline   = 1
        @p         = -1
        @text      = false
        @ts        = -1
        @te        = nil
        @eof       = -1
        @buf       = nil
        @attr      = nil
        @tag       = nil
        @akey      = nil
        @aval      = nil
        @mark_tag  = -1
        @mark_akey = -1
        @mark_aval = -1
        @done      = false
        @ele_open  = false
        @taint     = false
        @block     = nil

        @buffer_size = Hpricot.buffer_size ||= DEFAULT_BUFFER_SIZE
    end

    def rb_yield_tokens(sym, tag, attr, raw, taint)
        raw = tag if sym == :text
        ary = [sym, tag, attr, raw]

        if taint
            ary.taint
            tag.taint
            attr.taint
            raw.taint
        end

        @block.call(ary)
    end

    def ELE(n)
        if @te > @ts || @text then
            raw_string = nil
            @ele_open, @text = false, false

            if (@ts != -1 && n != :cdata && n != :text && n != :procins && n != :comment) then
                raw_string = @buf[@ts, @te - @ts]
            end

            rb_yield_tokens(n, @tag[0], @attr, raw_string, @taint)
        end
    end

    def ATTR(k, v)
        unless k.nil? then
            @attr = {} if @attr.nil?
            if k.class == Array then
                if v.class == Array then
                    @attr[k[0]] = v[0] unless k[0].nil?
                else
                    @attr[k[0]] = v unless k[0].nil?
                end
            else
                if v.class == Array then
                    @attr[k] = v[0] unless k.nil?
                else
                    @attr[k] = v unless k.nil?
                end
            end
        end
    end

    def SET(n, e)
        mark = 0
        case n
            when @tag:
                if @mark_tag == -1 or e == @mark_tag then
                    @tag[0] = ''
                else
                    @tag[0] = @buf[@mark_tag, e - @mark_tag]
                end
            when @akey:
                if @mark_akey == -1 or e == @mark_akey then
                    @akey[0] = ''
                else
                    @akey[0] = @buf[@mark_akey, e - @mark_akey]
                end
            when @aval:
                if @mark_aval == -1 or e == @mark_aval then
                    @aval[0] = ''
                else
                    @aval[0] = @buf[@mark_aval, e - @mark_aval]
                end
        end
    end

    def CAT(n, e)
        if n[0].nil? then
            SET(n, e)
        else
            mark = 0
            case n
                when @tag : mark = @mark_tag
                when @akey: mark = @mark_akey
                when @aval: mark = @mark_aval
            end
            n << @buf[mark, e - mark]
        end
    end

    def SLIDE(n)
        mark = 0

        case n
            when @tag : mark = @mark_tag
            when @akey: mark = @mark_akey
            when @aval: mark = @mark_aval
        end

        if mark > @ts then
            case n
                when @tag : @mark_tag  -= @ts
                when @akey: @mark_akey -= @ts
                when @aval: @mark_aval -= @ts
            end
        end

    end

    def TEXT_PASS
        return if @text

        if @ele_open then
            @ele_open = false
            @mark_tag = @ts if @ts > -1
        else
            @mark_tag = @p
        end
        
        @attr, @tag[0], @text = nil, nil, true
    end

    def EBLK(n, t)
        CAT(@tag, @p - t + 1)
        ELE(n)
    end

    def rb_raise(error, message)
        raise error, message;
    end

    def rb_str_new2(s)
        s
    end


    class << self
        attr_accessor :hpricot_scan_trans_keys
        #private :hpricot_scan_trans_keys, :hpricot_scan_trans_keys=
    end
    self.hpricot_scan_trans_keys = [
        45, 91, 45, 45, 79, 79, 
        67, 67, 84, 84, 89, 
        89, 80, 80, 69, 69, 
        9, 32, 9, 122, 9, 122, 
        9, 91, 85, 85, 66, 
        66, 76, 76, 73, 73, 
        67, 67, 9, 32, 9, 39, 
        9, 122, 9, 122, 9, 
        91, 9, 91, 34, 34, 
        34, 34, 9, 91, 93, 93, 
        9, 62, 39, 39, 39, 
        39, 9, 122, 9, 122, 
        9, 122, 9, 122, 9, 122, 
        9, 122, 9, 91, 34, 
        39, 34, 39, 9, 91, 
        39, 93, 9, 93, 9, 62, 
        9, 91, 34, 93, 9, 
        62, 9, 91, 9, 122, 
        89, 89, 83, 83, 84, 84, 
        69, 69, 77, 77, 67, 
        67, 68, 68, 65, 65, 
        84, 84, 65, 65, 91, 91, 
        58, 122, 9, 122, 9, 
        62, 9, 122, 9, 122, 
        9, 122, 9, 122, 62, 62, 
        9, 62, 9, 62, 9, 
        122, 9, 122, 9, 122, 
        9, 122, 9, 62, 9, 62, 
        9, 122, 9, 122, 9, 
        92, 9, 92, 9, 122, 
        34, 92, 34, 92, 9, 122, 
        9, 122, 34, 92, 9, 
        92, 9, 92, 9, 122, 
        9, 122, 9, 122, 9, 122, 
        9, 122, 9, 122, 9, 
        92, 9, 92, 9, 92, 
        9, 92, 9, 92, 9, 122, 
        34, 92, 9, 122, 39, 
        92, 39, 92, 9, 122, 
        9, 122, 39, 92, 9, 92, 
        9, 92, 9, 122, 9, 
        122, 9, 122, 9, 92, 
        9, 92, 9, 92, 9, 122, 
        9, 122, 9, 92, 9, 
        122, 9, 122, 9, 122, 
        9, 122, 34, 92, 34, 92, 
        9, 92, 9, 92, 9, 
        122, 9, 122, 9, 122, 
        9, 92, 9, 92, 9, 122, 
        9, 122, 9, 122, 9, 
        92, 9, 122, 9, 122, 
        34, 92, 9, 122, 9, 92, 
        9, 122, 34, 92, 9, 
        92, 34, 92, 39, 92, 
        9, 62, 58, 122, 9, 122, 
        9, 122, 9, 122, 9, 
        122, 101, 101, 114, 114, 
        115, 115, 105, 105, 111, 111, 
        110, 110, 9, 61, 9, 
        39, 45, 122, 34, 122, 
        9, 63, 9, 115, 62, 62, 
        110, 110, 99, 99, 111, 
        111, 100, 100, 105, 105, 
        110, 110, 103, 103, 9, 61, 
        9, 39, 65, 122, 34, 
        122, 9, 63, 9, 115, 
        116, 116, 97, 97, 110, 110, 
        100, 100, 97, 97, 108, 
        108, 111, 111, 110, 110, 
        101, 101, 9, 61, 9, 39, 
        110, 121, 111, 111, 34, 
        34, 9, 63, 101, 101, 
        115, 115, 110, 121, 111, 111, 
        39, 39, 101, 101, 115, 
        115, 65, 122, 39, 122, 
        45, 122, 39, 122, 62, 62, 
        62, 62, 10, 60, 33, 
        122, 39, 39, 93, 93, 
        34, 34, 34, 92, 39, 92, 
        34, 92, 9, 32, 9, 
        118, 10, 45, 45, 45, 
        10, 93, 93, 93, 10, 63, 
        62, 62, 0
    ]

    class << self
        attr_accessor :hpricot_scan_key_spans
        #private :hpricot_scan_key_spans, :hpricot_scan_key_spans=
    end
    self.hpricot_scan_key_spans = [
        47, 1, 1, 1, 1, 1, 1, 1, 
        24, 114, 114, 83, 1, 1, 1, 1, 
        1, 24, 31, 114, 114, 83, 83, 1, 
        1, 83, 1, 54, 1, 1, 114, 114, 
        114, 114, 114, 114, 83, 6, 6, 83, 
        55, 85, 54, 83, 60, 54, 83, 114, 
        1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 65, 114, 54, 114, 114, 
        114, 114, 1, 54, 54, 114, 114, 114, 
        114, 54, 54, 114, 114, 84, 84, 114, 
        59, 59, 114, 114, 59, 84, 84, 114, 
        114, 114, 114, 114, 114, 84, 84, 84, 
        84, 84, 114, 59, 114, 54, 54, 114, 
        114, 54, 84, 84, 114, 114, 114, 84, 
        84, 84, 114, 114, 84, 114, 114, 114, 
        114, 59, 59, 84, 84, 114, 114, 114, 
        84, 84, 114, 114, 114, 84, 114, 114, 
        59, 114, 84, 114, 59, 84, 59, 54, 
        54, 65, 114, 114, 114, 114, 1, 1, 
        1, 1, 1, 1, 53, 31, 78, 89, 
        55, 107, 1, 1, 1, 1, 1, 1, 
        1, 1, 53, 31, 58, 89, 55, 107, 
        1, 1, 1, 1, 1, 1, 1, 1, 
        1, 53, 31, 12, 1, 1, 55, 1, 
        1, 12, 1, 1, 1, 1, 58, 84, 
        78, 84, 1, 1, 51, 90, 1, 1, 
        1, 59, 54, 59, 24, 110, 36, 1, 
        84, 1, 54, 1
    ]

    class << self
        attr_accessor :hpricot_scan_index_offsets
        #private :hpricot_scan_index_offsets, :hpricot_scan_index_offsets=
    end
    self.hpricot_scan_index_offsets = [
        0, 48, 50, 52, 54, 56, 58, 60, 
        62, 87, 202, 317, 401, 403, 405, 407, 
        409, 411, 436, 468, 583, 698, 782, 866, 
        868, 870, 954, 956, 1011, 1013, 1015, 1130, 
        1245, 1360, 1475, 1590, 1705, 1789, 1796, 1803, 
        1887, 1943, 2029, 2084, 2168, 2229, 2284, 2368, 
        2483, 2485, 2487, 2489, 2491, 2493, 2495, 2497, 
        2499, 2501, 2503, 2505, 2571, 2686, 2741, 2856, 
        2971, 3086, 3201, 3203, 3258, 3313, 3428, 3543, 
        3658, 3773, 3828, 3883, 3998, 4113, 4198, 4283, 
        4398, 4458, 4518, 4633, 4748, 4808, 4893, 4978, 
        5093, 5208, 5323, 5438, 5553, 5668, 5753, 5838, 
        5923, 6008, 6093, 6208, 6268, 6383, 6438, 6493, 
        6608, 6723, 6778, 6863, 6948, 7063, 7178, 7293, 
        7378, 7463, 7548, 7663, 7778, 7863, 7978, 8093, 
        8208, 8323, 8383, 8443, 8528, 8613, 8728, 8843, 
        8958, 9043, 9128, 9243, 9358, 9473, 9558, 9673, 
        9788, 9848, 9963, 10048, 10163, 10223, 10308, 10368, 
        10423, 10478, 10544, 10659, 10774, 10889, 11004, 11006, 
        11008, 11010, 11012, 11014, 11016, 11070, 11102, 11181, 
        11271, 11327, 11435, 11437, 11439, 11441, 11443, 11445, 
        11447, 11449, 11451, 11505, 11537, 11596, 11686, 11742, 
        11850, 11852, 11854, 11856, 11858, 11860, 11862, 11864, 
        11866, 11868, 11922, 11954, 11967, 11969, 11971, 12027, 
        12029, 12031, 12044, 12046, 12048, 12050, 12052, 12111, 
        12196, 12275, 12360, 12362, 12364, 12416, 12507, 12509, 
        12511, 12513, 12573, 12628, 12688, 12713, 12824, 12861, 
        12863, 12948, 12950, 13005
    ]

    class << self
        attr_accessor :hpricot_scan_indicies
        #private :hpricot_scan_indicies, :hpricot_scan_indicies=
    end
    self.hpricot_scan_indicies = [
        1, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 2, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 3, 0, 
        4, 0, 5, 0, 6, 0, 7, 0, 
        8, 0, 9, 0, 10, 0, 11, 11, 
        11, 11, 11, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 11, 0, 11, 
        11, 11, 11, 11, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 11, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        12, 0, 0, 0, 0, 0, 0, 12, 
        12, 12, 12, 12, 12, 12, 12, 12, 
        12, 12, 12, 12, 12, 12, 12, 12, 
        12, 12, 12, 12, 12, 12, 12, 12, 
        12, 0, 0, 0, 0, 12, 0, 12, 
        12, 12, 12, 12, 12, 12, 12, 12, 
        12, 12, 12, 12, 12, 12, 12, 12, 
        12, 12, 12, 12, 12, 12, 12, 12, 
        12, 0, 13, 13, 13, 13, 13, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 13, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 14, 14, 
        0, 14, 14, 14, 14, 14, 14, 14, 
        14, 14, 14, 14, 0, 0, 0, 15, 
        14, 0, 14, 14, 14, 14, 14, 14, 
        14, 14, 14, 14, 14, 14, 14, 14, 
        14, 14, 14, 14, 14, 14, 14, 14, 
        14, 14, 14, 14, 16, 0, 0, 0, 
        14, 0, 14, 14, 14, 14, 14, 14, 
        14, 14, 14, 14, 14, 14, 14, 14, 
        14, 14, 14, 14, 14, 14, 14, 14, 
        14, 14, 14, 14, 0, 17, 17, 17, 
        17, 17, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 17, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 18, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 19, 0, 0, 20, 
        0, 0, 0, 0, 0, 0, 0, 21, 
        0, 22, 0, 23, 0, 24, 0, 25, 
        0, 26, 0, 27, 27, 27, 27, 27, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 27, 0, 27, 27, 27, 27, 
        27, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 27, 0, 28, 0, 0, 
        0, 0, 29, 0, 30, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 30, 30, 31, 30, 30, 
        30, 0, 30, 30, 30, 30, 30, 30, 
        30, 30, 30, 30, 30, 30, 30, 30, 
        30, 30, 30, 30, 30, 30, 30, 0, 
        30, 0, 30, 30, 30, 30, 30, 30, 
        30, 30, 30, 30, 30, 30, 30, 30, 
        30, 30, 30, 30, 30, 30, 30, 30, 
        30, 30, 30, 30, 30, 30, 0, 0, 
        0, 0, 30, 0, 30, 30, 30, 30, 
        30, 30, 30, 30, 30, 30, 30, 30, 
        30, 30, 30, 30, 30, 30, 30, 30, 
        30, 30, 30, 30, 30, 30, 0, 32, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 32, 32, 
        33, 32, 32, 32, 0, 32, 32, 32, 
        32, 32, 32, 32, 32, 32, 32, 32, 
        32, 32, 32, 32, 32, 32, 32, 32, 
        32, 32, 0, 32, 0, 32, 32, 32, 
        32, 32, 32, 32, 32, 32, 32, 32, 
        32, 32, 32, 32, 32, 32, 32, 32, 
        32, 32, 32, 32, 32, 32, 32, 32, 
        32, 0, 0, 0, 0, 32, 0, 32, 
        32, 32, 32, 32, 32, 32, 32, 32, 
        32, 32, 32, 32, 32, 32, 32, 32, 
        32, 32, 32, 32, 32, 32, 32, 32, 
        32, 0, 34, 34, 34, 34, 34, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 34, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 18, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 21, 0, 34, 34, 
        34, 34, 34, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 34, 0, 35, 
        0, 0, 0, 0, 36, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 18, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        21, 0, 38, 37, 41, 40, 42, 42, 
        42, 42, 42, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 42, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 18, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        21, 39, 43, 21, 43, 43, 43, 43, 
        43, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 43, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 18, 39, 38, 44, 41, 45, 46, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 46, 46, 
        0, 46, 46, 46, 0, 47, 46, 46, 
        46, 46, 46, 46, 46, 46, 46, 46, 
        46, 46, 46, 46, 46, 46, 46, 46, 
        46, 46, 0, 46, 0, 46, 46, 46, 
        46, 46, 46, 46, 46, 46, 46, 46, 
        46, 46, 46, 46, 46, 46, 46, 46, 
        46, 46, 46, 46, 46, 46, 46, 46, 
        46, 0, 0, 0, 0, 46, 0, 46, 
        46, 46, 46, 46, 46, 46, 46, 46, 
        46, 46, 46, 46, 46, 46, 46, 46, 
        46, 46, 46, 46, 46, 46, 46, 46, 
        46, 0, 48, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 48, 48, 0, 48, 48, 48, 0, 
        49, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 0, 48, 0, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 0, 0, 0, 0, 
        48, 0, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 0, 50, 34, 34, 
        34, 34, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 50, 48, 0, 48, 
        48, 48, 0, 49, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        0, 48, 18, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 21, 
        0, 0, 0, 48, 0, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 0, 
        50, 34, 34, 34, 34, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 50, 
        48, 35, 48, 48, 48, 0, 51, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 0, 48, 18, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 21, 0, 0, 0, 48, 0, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 48, 48, 48, 48, 48, 48, 
        48, 48, 0, 52, 53, 53, 53, 53, 
        44, 44, 44, 44, 44, 44, 44, 44, 
        44, 44, 44, 44, 44, 44, 44, 44, 
        44, 44, 52, 54, 44, 54, 54, 54, 
        44, 55, 54, 54, 54, 54, 54, 54, 
        54, 54, 54, 54, 54, 54, 54, 54, 
        54, 54, 54, 54, 54, 54, 44, 54, 
        56, 54, 54, 54, 54, 54, 54, 54, 
        54, 54, 54, 54, 54, 54, 54, 54, 
        54, 54, 54, 54, 54, 54, 54, 54, 
        54, 54, 54, 54, 54, 57, 44, 44, 
        44, 54, 44, 54, 54, 54, 54, 54, 
        54, 54, 54, 54, 54, 54, 54, 54, 
        54, 54, 54, 54, 54, 54, 54, 54, 
        54, 54, 54, 54, 54, 44, 58, 59, 
        59, 59, 59, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 58, 60, 61, 
        60, 60, 60, 45, 62, 60, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 45, 60, 63, 60, 60, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        64, 45, 45, 45, 60, 45, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        45, 59, 59, 59, 59, 59, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        59, 45, 61, 45, 45, 45, 45, 65, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 63, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 64, 45, 67, 66, 66, 
        66, 66, 68, 66, 70, 69, 69, 69, 
        69, 71, 69, 72, 72, 72, 72, 72, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 72, 45, 45, 45, 45, 45, 
        45, 41, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        63, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 64, 45, 73, 
        64, 64, 64, 64, 64, 64, 64, 64, 
        64, 64, 64, 64, 64, 64, 64, 64, 
        64, 64, 64, 64, 64, 64, 64, 64, 
        64, 64, 64, 64, 64, 64, 64, 64, 
        64, 64, 64, 64, 64, 64, 64, 64, 
        64, 64, 64, 64, 64, 64, 64, 64, 
        64, 64, 64, 64, 64, 74, 64, 75, 
        75, 75, 75, 75, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 75, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 76, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 21, 21, 21, 21, 21, 
        21, 21, 21, 43, 21, 74, 74, 74, 
        74, 74, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 74, 45, 45, 45, 
        45, 45, 45, 41, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 63, 45, 77, 77, 77, 77, 
        77, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 77, 40, 41, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 78, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 79, 40, 
        73, 79, 79, 79, 79, 79, 79, 79, 
        79, 79, 79, 79, 79, 79, 79, 79, 
        79, 79, 79, 79, 79, 79, 79, 79, 
        79, 79, 79, 79, 79, 79, 79, 79, 
        79, 79, 79, 79, 79, 79, 79, 79, 
        79, 79, 79, 79, 79, 79, 79, 79, 
        79, 79, 79, 79, 79, 79, 79, 79, 
        79, 79, 79, 80, 79, 80, 80, 80, 
        80, 80, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 80, 40, 41, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 78, 40, 81, 81, 81, 81, 
        81, 44, 44, 44, 44, 44, 44, 44, 
        44, 44, 44, 44, 44, 44, 44, 44, 
        44, 44, 44, 81, 44, 44, 44, 44, 
        44, 44, 38, 44, 44, 44, 44, 44, 
        44, 44, 44, 44, 44, 44, 44, 44, 
        44, 44, 44, 44, 44, 44, 44, 44, 
        44, 56, 44, 44, 44, 44, 44, 44, 
        44, 44, 44, 44, 44, 44, 44, 44, 
        44, 44, 44, 44, 44, 44, 44, 44, 
        44, 44, 44, 44, 44, 44, 57, 44, 
        60, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 45, 
        45, 45, 45, 45, 45, 45, 45, 60, 
        60, 45, 60, 60, 60, 45, 82, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 60, 45, 60, 45, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 45, 45, 45, 45, 60, 45, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 60, 60, 60, 60, 60, 60, 
        60, 60, 45, 83, 0, 84, 0, 85, 
        0, 86, 0, 87, 0, 88, 0, 89, 
        0, 90, 0, 91, 0, 92, 0, 93, 
        0, 94, 0, 0, 0, 0, 0, 0, 
        94, 94, 94, 94, 94, 94, 94, 94, 
        94, 94, 94, 94, 94, 94, 94, 94, 
        94, 94, 94, 94, 94, 94, 94, 94, 
        94, 94, 0, 0, 0, 0, 94, 0, 
        94, 94, 94, 94, 94, 94, 94, 94, 
        94, 94, 94, 94, 94, 94, 94, 94, 
        94, 94, 94, 94, 94, 94, 94, 94, 
        94, 94, 0, 95, 95, 95, 95, 95, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 95, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 96, 
        96, 0, 96, 96, 96, 96, 96, 96, 
        96, 96, 96, 96, 96, 0, 0, 0, 
        97, 96, 0, 96, 96, 96, 96, 96, 
        96, 96, 96, 96, 96, 96, 96, 96, 
        96, 96, 96, 96, 96, 96, 96, 96, 
        96, 96, 96, 96, 96, 0, 0, 0, 
        0, 96, 0, 96, 96, 96, 96, 96, 
        96, 96, 96, 96, 96, 96, 96, 96, 
        96, 96, 96, 96, 96, 96, 96, 96, 
        96, 96, 96, 96, 96, 0, 98, 98, 
        98, 98, 98, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 98, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 99, 0, 100, 100, 100, 
        100, 100, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 100, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 101, 101, 102, 101, 101, 101, 101, 
        101, 101, 101, 101, 101, 101, 101, 0, 
        0, 0, 103, 101, 0, 101, 101, 101, 
        101, 101, 101, 101, 101, 101, 101, 101, 
        101, 101, 101, 101, 101, 101, 101, 101, 
        101, 101, 101, 101, 101, 101, 101, 0, 
        0, 0, 0, 101, 0, 101, 101, 101, 
        101, 101, 101, 101, 101, 101, 101, 101, 
        101, 101, 101, 101, 101, 101, 101, 101, 
        101, 101, 101, 101, 101, 101, 101, 0, 
        104, 104, 104, 104, 104, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 104, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 105, 105, 106, 105, 
        105, 105, 105, 105, 105, 105, 105, 105, 
        105, 105, 0, 0, 0, 107, 105, 0, 
        105, 105, 105, 105, 105, 105, 105, 105, 
        105, 105, 105, 105, 105, 105, 105, 105, 
        105, 105, 105, 105, 105, 105, 105, 105, 
        105, 105, 0, 0, 0, 0, 105, 0, 
        105, 105, 105, 105, 105, 105, 105, 105, 
        105, 105, 105, 105, 105, 105, 105, 105, 
        105, 105, 105, 105, 105, 105, 105, 105, 
        105, 105, 0, 108, 108, 108, 108, 108, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 108, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 109, 
        109, 110, 109, 109, 109, 109, 109, 109, 
        109, 109, 109, 109, 109, 39, 39, 111, 
        112, 109, 39, 109, 109, 109, 109, 109, 
        109, 109, 109, 109, 109, 109, 109, 109, 
        109, 109, 109, 109, 109, 109, 109, 109, 
        109, 109, 109, 109, 109, 39, 39, 39, 
        39, 109, 39, 109, 109, 109, 109, 109, 
        109, 109, 109, 109, 109, 109, 109, 109, 
        109, 109, 109, 109, 109, 109, 109, 109, 
        109, 109, 109, 109, 109, 39, 113, 113, 
        113, 113, 113, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 113, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 114, 114, 115, 114, 114, 114, 
        114, 114, 114, 114, 114, 114, 114, 114, 
        39, 39, 116, 117, 114, 39, 114, 114, 
        114, 114, 114, 114, 114, 114, 114, 114, 
        114, 114, 114, 114, 114, 114, 114, 114, 
        114, 114, 114, 114, 114, 114, 114, 114, 
        39, 39, 39, 39, 114, 39, 114, 114, 
        114, 114, 114, 114, 114, 114, 114, 114, 
        114, 114, 114, 114, 114, 114, 114, 114, 
        114, 114, 114, 114, 114, 114, 114, 114, 
        39, 118, 39, 120, 120, 121, 121, 120, 
        119, 119, 119, 119, 119, 119, 119, 119, 
        119, 119, 119, 119, 119, 119, 119, 119, 
        119, 119, 120, 119, 122, 119, 119, 119, 
        119, 123, 119, 119, 119, 119, 119, 119, 
        119, 124, 119, 119, 119, 119, 119, 119, 
        119, 119, 119, 119, 119, 119, 39, 119, 
        117, 119, 126, 126, 127, 127, 126, 125, 
        125, 125, 125, 125, 125, 125, 125, 125, 
        125, 125, 125, 125, 125, 125, 125, 125, 
        125, 126, 125, 125, 125, 125, 125, 125, 
        125, 125, 125, 125, 125, 125, 125, 125, 
        128, 125, 125, 125, 125, 125, 125, 125, 
        125, 125, 125, 125, 125, 39, 125, 129, 
        125, 130, 130, 130, 130, 130, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 39, 39, 39, 
        130, 39, 39, 39, 39, 39, 39, 39, 
        39, 39, 39, 39, 39, 114, 114, 115, 
        114, 114, 114, 114, 114, 114, 114, 114, 
        114, 114, 114, 39, 39, 39, 117, 114, 
        39, 114, 114, 114, 114, 114, 114, 114, 
        114, 114, 114, 114, 114, 114, 114, 114, 
        114, 114, 114, 114, 114, 114, 114, 114, 
        114, 114, 114, 39, 39, 39, 39, 114, 
        39, 114, 114, 114, 114, 114, 114, 114, 
        114, 114, 114, 114, 114, 114, 114, 114, 
        114, 114, 114, 114, 114, 114, 114, 114, 
        114, 114, 114, 39, 126, 126, 127, 127, 
        126, 125, 125, 125, 125, 125, 125, 125, 
        125, 125, 125, 125, 125, 125, 125, 125, 
        125, 125, 125, 126, 125, 125, 125, 125, 
        125, 125, 125, 125, 125, 125, 125, 125, 
        131, 131, 132, 131, 131, 131, 131, 131, 
        131, 131, 131, 131, 131, 131, 125, 39, 
        125, 133, 131, 125, 131, 131, 131, 131, 
        131, 131, 131, 131, 131, 131, 131, 131, 
        131, 131, 131, 131, 131, 131, 131, 131, 
        131, 131, 131, 131, 131, 131, 125, 125, 
        125, 125, 131, 125, 131, 131, 131, 131, 
        131, 131, 131, 131, 131, 131, 131, 131, 
        131, 131, 131, 131, 131, 131, 131, 131, 
        131, 131, 131, 131, 131, 131, 125, 134, 
        134, 135, 135, 134, 125, 125, 125, 125, 
        125, 125, 125, 125, 125, 125, 125, 125, 
        125, 125, 125, 125, 125, 125, 134, 125, 
        125, 125, 125, 125, 125, 125, 125, 125, 
        125, 125, 125, 136, 136, 137, 136, 136, 
        136, 136, 136, 136, 136, 136, 136, 136, 
        136, 125, 39, 138, 139, 136, 125, 136, 
        136, 136, 136, 136, 136, 136, 136, 136, 
        136, 136, 136, 136, 136, 136, 136, 136, 
        136, 136, 136, 136, 136, 136, 136, 136, 
        136, 125, 125, 125, 125, 136, 125, 136, 
        136, 136, 136, 136, 136, 136, 136, 136, 
        136, 136, 136, 136, 136, 136, 136, 136, 
        136, 136, 136, 136, 136, 136, 136, 136, 
        136, 125, 140, 140, 141, 141, 140, 125, 
        125, 125, 125, 125, 125, 125, 125, 125, 
        125, 125, 125, 125, 125, 125, 125, 125, 
        125, 140, 125, 125, 125, 125, 125, 125, 
        125, 125, 125, 125, 125, 125, 131, 131, 
        132, 131, 131, 131, 131, 131, 131, 131, 
        131, 131, 131, 131, 125, 39, 142, 133, 
        131, 125, 131, 131, 131, 131, 131, 131, 
        131, 131, 131, 131, 131, 131, 131, 131, 
        131, 131, 131, 131, 131, 131, 131, 131, 
        131, 131, 131, 131, 125, 125, 125, 125, 
        131, 125, 131, 131, 131, 131, 131, 131, 
        131, 131, 131, 131, 131, 131, 131, 131, 
        131, 131, 131, 131, 131, 131, 131, 131, 
        131, 131, 131, 131, 125, 126, 126, 127, 
        127, 126, 125, 125, 125, 125, 125, 125, 
        125, 125, 125, 125, 125, 125, 125, 125, 
        125, 125, 125, 125, 126, 125, 125, 125, 
        125, 125, 125, 125, 125, 125, 125, 125, 
        125, 125, 125, 128, 125, 125, 125, 125, 
        125, 125, 125, 125, 125, 125, 125, 125, 
        39, 125, 129, 125, 143, 143, 144, 144, 
        143, 119, 119, 119, 119, 119, 119, 119, 
        119, 119, 119, 119, 119, 119, 119, 119, 
        119, 119, 119, 143, 119, 145, 119, 119, 
        119, 119, 146, 119, 119, 119, 119, 119, 
        119, 119, 147, 119, 119, 119, 119, 119, 
        119, 119, 119, 119, 119, 119, 119, 39, 
        119, 129, 119, 148, 148, 149, 149, 148, 
        119, 119, 119, 119, 119, 119, 119, 119, 
        119, 119, 119, 119, 119, 119, 119, 119, 
        119, 119, 148, 119, 122, 119, 119, 119, 
        119, 123, 119, 119, 119, 119, 119, 150, 
        150, 124, 150, 150, 150, 150, 150, 150, 
        150, 150, 150, 150, 150, 119, 39, 119, 
        117, 150, 119, 150, 150, 150, 150, 150, 
        150, 150, 150, 150, 150, 150, 150, 150, 
        150, 150, 150, 150, 150, 150, 150, 150, 
        150, 150, 150, 150, 150, 119, 119, 119, 
        119, 150, 119, 150, 150, 150, 150, 150, 
        150, 150, 150, 150, 150, 150, 150, 150, 
        150, 150, 150, 150, 150, 150, 150, 150, 
        150, 150, 150, 150, 150, 119, 143, 143, 
        144, 144, 143, 119, 119, 119, 119, 119, 
        119, 119, 119, 119, 119, 119, 119, 119, 
        119, 119, 119, 119, 119, 143, 119, 145, 
        119, 119, 119, 119, 146, 119, 119, 119, 
        119, 119, 150, 150, 151, 150, 150, 150, 
        150, 150, 150, 150, 150, 150, 150, 150, 
        119, 39, 119, 133, 150, 119, 150, 150, 
        150, 150, 150, 150, 150, 150, 150, 150, 
        150, 150, 150, 150, 150, 150, 150, 150, 
        150, 150, 150, 150, 150, 150, 150, 150, 
        119, 119, 119, 119, 150, 119, 150, 150, 
        150, 150, 150, 150, 150, 150, 150, 150, 
        150, 150, 150, 150, 150, 150, 150, 150, 
        150, 150, 150, 150, 150, 150, 150, 150, 
        119, 153, 153, 154, 154, 153, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        153, 152, 155, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 156, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 157, 152, 158, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 159, 152, 161, 161, 
        162, 162, 161, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 161, 160, 163, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 164, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 165, 160, 166, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 167, 160, 168, 168, 168, 168, 168, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 168, 165, 169, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 170, 
        170, 171, 170, 170, 170, 170, 170, 170, 
        170, 170, 170, 170, 170, 165, 165, 165, 
        172, 170, 165, 170, 170, 170, 170, 170, 
        170, 170, 170, 170, 170, 170, 170, 170, 
        170, 170, 170, 170, 170, 170, 170, 170, 
        170, 170, 170, 170, 170, 165, 173, 165, 
        165, 170, 165, 170, 170, 170, 170, 170, 
        170, 170, 170, 170, 170, 170, 170, 170, 
        170, 170, 170, 170, 170, 170, 170, 170, 
        170, 170, 170, 170, 170, 165, 169, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        173, 165, 174, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 173, 165, 175, 175, 
        175, 175, 175, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 175, 165, 169, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 176, 176, 177, 176, 176, 176, 
        176, 176, 176, 176, 176, 176, 176, 176, 
        165, 165, 178, 179, 176, 165, 176, 176, 
        176, 176, 176, 176, 176, 176, 176, 176, 
        176, 176, 176, 176, 176, 176, 176, 176, 
        176, 176, 176, 176, 176, 176, 176, 176, 
        165, 173, 165, 165, 176, 165, 176, 176, 
        176, 176, 176, 176, 176, 176, 176, 176, 
        176, 176, 176, 176, 176, 176, 176, 176, 
        176, 176, 176, 176, 176, 176, 176, 176, 
        165, 180, 180, 180, 180, 180, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        180, 165, 169, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 170, 170, 171, 
        170, 170, 170, 170, 170, 170, 170, 170, 
        170, 170, 170, 165, 165, 181, 172, 170, 
        165, 170, 170, 170, 170, 170, 170, 170, 
        170, 170, 170, 170, 170, 170, 170, 170, 
        170, 170, 170, 170, 170, 170, 170, 170, 
        170, 170, 170, 165, 173, 165, 165, 170, 
        165, 170, 170, 170, 170, 170, 170, 170, 
        170, 170, 170, 170, 170, 170, 170, 170, 
        170, 170, 170, 170, 170, 170, 170, 170, 
        170, 170, 170, 165, 169, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        182, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 173, 165, 
        183, 183, 184, 184, 183, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 183, 
        152, 185, 152, 152, 152, 152, 186, 152, 
        152, 152, 152, 152, 152, 152, 187, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 165, 152, 172, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 159, 152, 188, 188, 189, 
        189, 188, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 188, 152, 185, 152, 
        152, 152, 152, 186, 152, 152, 152, 152, 
        152, 152, 152, 187, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        165, 152, 172, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        159, 152, 188, 188, 189, 189, 188, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 188, 152, 185, 152, 152, 152, 152, 
        186, 152, 152, 152, 152, 152, 190, 190, 
        187, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 152, 165, 152, 172, 
        190, 152, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 152, 159, 152, 152, 
        190, 152, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 152, 191, 191, 192, 
        192, 191, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 191, 152, 193, 152, 
        152, 152, 152, 194, 152, 152, 152, 152, 
        152, 190, 190, 195, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 152, 
        165, 152, 196, 190, 152, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 152, 
        159, 152, 152, 190, 152, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 152, 
        153, 153, 154, 154, 153, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 153, 
        152, 155, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 190, 190, 195, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 152, 157, 152, 197, 190, 152, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 152, 159, 152, 152, 190, 152, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 190, 190, 190, 190, 190, 190, 
        190, 190, 152, 161, 161, 162, 162, 161, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 161, 160, 163, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 198, 
        198, 199, 198, 198, 198, 198, 198, 198, 
        198, 198, 198, 198, 198, 160, 165, 160, 
        196, 198, 160, 198, 198, 198, 198, 198, 
        198, 198, 198, 198, 198, 198, 198, 198, 
        198, 198, 198, 198, 198, 198, 198, 198, 
        198, 198, 198, 198, 198, 160, 167, 160, 
        160, 198, 160, 198, 198, 198, 198, 198, 
        198, 198, 198, 198, 198, 198, 198, 198, 
        198, 198, 198, 198, 198, 198, 198, 198, 
        198, 198, 198, 198, 198, 160, 200, 200, 
        201, 201, 200, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 200, 160, 163, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 202, 202, 203, 202, 202, 202, 
        202, 202, 202, 202, 202, 202, 202, 202, 
        160, 165, 204, 205, 202, 160, 202, 202, 
        202, 202, 202, 202, 202, 202, 202, 202, 
        202, 202, 202, 202, 202, 202, 202, 202, 
        202, 202, 202, 202, 202, 202, 202, 202, 
        160, 167, 160, 160, 202, 160, 202, 202, 
        202, 202, 202, 202, 202, 202, 202, 202, 
        202, 202, 202, 202, 202, 202, 202, 202, 
        202, 202, 202, 202, 202, 202, 202, 202, 
        160, 206, 206, 207, 207, 206, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        206, 160, 163, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 198, 198, 199, 
        198, 198, 198, 198, 198, 198, 198, 198, 
        198, 198, 198, 160, 165, 208, 196, 198, 
        160, 198, 198, 198, 198, 198, 198, 198, 
        198, 198, 198, 198, 198, 198, 198, 198, 
        198, 198, 198, 198, 198, 198, 198, 198, 
        198, 198, 198, 160, 167, 160, 160, 198, 
        160, 198, 198, 198, 198, 198, 198, 198, 
        198, 198, 198, 198, 198, 198, 198, 198, 
        198, 198, 198, 198, 198, 198, 198, 198, 
        198, 198, 198, 160, 161, 161, 162, 162, 
        161, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 161, 160, 163, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 164, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 165, 
        160, 166, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 167, 
        160, 161, 161, 162, 162, 161, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        161, 160, 209, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 164, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 165, 160, 166, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 160, 160, 160, 160, 
        160, 160, 160, 160, 167, 160, 191, 191, 
        192, 192, 191, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 191, 152, 193, 
        152, 152, 152, 152, 194, 152, 152, 152, 
        152, 152, 152, 152, 156, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 165, 152, 166, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 152, 152, 152, 152, 152, 152, 152, 
        152, 159, 152, 211, 211, 212, 212, 211, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 211, 210, 213, 210, 210, 210, 
        210, 214, 210, 210, 210, 210, 210, 210, 
        210, 215, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 216, 210, 
        217, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 218, 210, 
        220, 220, 221, 221, 220, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 220, 
        219, 222, 219, 219, 219, 219, 209, 219, 
        219, 219, 219, 219, 219, 219, 223, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 224, 219, 225, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 226, 219, 227, 227, 227, 
        227, 227, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 227, 224, 228, 224, 
        224, 224, 224, 174, 224, 224, 224, 224, 
        224, 229, 229, 230, 229, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 224, 
        224, 224, 231, 229, 224, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 224, 
        232, 224, 224, 229, 224, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 224, 
        228, 224, 224, 224, 224, 174, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 232, 224, 234, 234, 234, 234, 
        234, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 234, 233, 233, 233, 233, 
        233, 233, 169, 233, 233, 233, 233, 233, 
        235, 235, 236, 235, 235, 235, 235, 235, 
        235, 235, 235, 235, 235, 235, 233, 233, 
        233, 237, 235, 233, 235, 235, 235, 235, 
        235, 235, 235, 235, 235, 235, 235, 235, 
        235, 235, 235, 235, 235, 235, 235, 235, 
        235, 235, 235, 235, 235, 235, 233, 238, 
        233, 233, 235, 233, 235, 235, 235, 235, 
        235, 235, 235, 235, 235, 235, 235, 235, 
        235, 235, 235, 235, 235, 235, 235, 235, 
        235, 235, 235, 235, 235, 235, 233, 169, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 238, 233, 228, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 238, 233, 239, 239, 239, 
        239, 239, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 239, 233, 233, 233, 
        233, 233, 233, 169, 233, 233, 233, 233, 
        233, 240, 240, 241, 240, 240, 240, 240, 
        240, 240, 240, 240, 240, 240, 240, 233, 
        233, 242, 243, 240, 233, 240, 240, 240, 
        240, 240, 240, 240, 240, 240, 240, 240, 
        240, 240, 240, 240, 240, 240, 240, 240, 
        240, 240, 240, 240, 240, 240, 240, 233, 
        238, 233, 233, 240, 233, 240, 240, 240, 
        240, 240, 240, 240, 240, 240, 240, 240, 
        240, 240, 240, 240, 240, 240, 240, 240, 
        240, 240, 240, 240, 240, 240, 240, 233, 
        244, 244, 244, 244, 244, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 244, 
        233, 233, 233, 233, 233, 233, 169, 233, 
        233, 233, 233, 233, 235, 235, 236, 235, 
        235, 235, 235, 235, 235, 235, 235, 235, 
        235, 235, 233, 233, 245, 237, 235, 233, 
        235, 235, 235, 235, 235, 235, 235, 235, 
        235, 235, 235, 235, 235, 235, 235, 235, 
        235, 235, 235, 235, 235, 235, 235, 235, 
        235, 235, 233, 238, 233, 233, 235, 233, 
        235, 235, 235, 235, 235, 235, 235, 235, 
        235, 235, 235, 235, 235, 235, 235, 235, 
        235, 235, 235, 235, 235, 235, 235, 235, 
        235, 235, 233, 169, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 246, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        238, 233, 248, 248, 249, 249, 248, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 248, 247, 250, 247, 247, 247, 247, 
        251, 247, 247, 247, 247, 247, 247, 247, 
        252, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 233, 247, 237, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 253, 247, 255, 
        255, 256, 256, 255, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 255, 254, 
        254, 254, 254, 254, 254, 163, 254, 254, 
        254, 254, 254, 254, 254, 257, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 233, 254, 258, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 259, 254, 255, 255, 256, 256, 
        255, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 255, 254, 254, 254, 254, 
        254, 254, 163, 254, 254, 254, 254, 254, 
        260, 260, 261, 260, 260, 260, 260, 260, 
        260, 260, 260, 260, 260, 260, 254, 233, 
        254, 262, 260, 254, 260, 260, 260, 260, 
        260, 260, 260, 260, 260, 260, 260, 260, 
        260, 260, 260, 260, 260, 260, 260, 260, 
        260, 260, 260, 260, 260, 260, 254, 259, 
        254, 254, 260, 254, 260, 260, 260, 260, 
        260, 260, 260, 260, 260, 260, 260, 260, 
        260, 260, 260, 260, 260, 260, 260, 260, 
        260, 260, 260, 260, 260, 260, 254, 263, 
        263, 264, 264, 263, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 263, 254, 
        254, 254, 254, 254, 254, 163, 254, 254, 
        254, 254, 254, 265, 265, 266, 265, 265, 
        265, 265, 265, 265, 265, 265, 265, 265, 
        265, 254, 233, 267, 268, 265, 254, 265, 
        265, 265, 265, 265, 265, 265, 265, 265, 
        265, 265, 265, 265, 265, 265, 265, 265, 
        265, 265, 265, 265, 265, 265, 265, 265, 
        265, 254, 259, 254, 254, 265, 254, 265, 
        265, 265, 265, 265, 265, 265, 265, 265, 
        265, 265, 265, 265, 265, 265, 265, 265, 
        265, 265, 265, 265, 265, 265, 265, 265, 
        265, 254, 269, 269, 270, 270, 269, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 269, 254, 254, 254, 254, 254, 254, 
        163, 254, 254, 254, 254, 254, 260, 260, 
        261, 260, 260, 260, 260, 260, 260, 260, 
        260, 260, 260, 260, 254, 233, 271, 262, 
        260, 254, 260, 260, 260, 260, 260, 260, 
        260, 260, 260, 260, 260, 260, 260, 260, 
        260, 260, 260, 260, 260, 260, 260, 260, 
        260, 260, 260, 260, 254, 259, 254, 254, 
        260, 254, 260, 260, 260, 260, 260, 260, 
        260, 260, 260, 260, 260, 260, 260, 260, 
        260, 260, 260, 260, 260, 260, 260, 260, 
        260, 260, 260, 260, 254, 255, 255, 256, 
        256, 255, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 255, 254, 254, 254, 
        254, 254, 254, 163, 254, 254, 254, 254, 
        254, 254, 254, 257, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        233, 254, 258, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        259, 254, 255, 255, 256, 256, 255, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 255, 254, 254, 254, 254, 254, 254, 
        222, 254, 254, 254, 254, 254, 254, 254, 
        257, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 233, 254, 258, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 254, 254, 254, 
        254, 254, 254, 254, 254, 259, 254, 272, 
        272, 273, 273, 272, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 272, 247, 
        274, 247, 247, 247, 247, 275, 247, 247, 
        247, 247, 247, 247, 247, 276, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 233, 247, 258, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 253, 247, 277, 277, 278, 278, 
        277, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 277, 247, 250, 247, 247, 
        247, 247, 251, 247, 247, 247, 247, 247, 
        279, 279, 252, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 247, 233, 
        247, 237, 279, 247, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 247, 253, 
        247, 247, 279, 247, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 247, 272, 
        272, 273, 273, 272, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 272, 247, 
        274, 247, 247, 247, 247, 275, 247, 247, 
        247, 247, 247, 279, 279, 280, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 247, 233, 247, 262, 279, 247, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 247, 253, 247, 247, 279, 247, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 247, 211, 211, 212, 212, 211, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 211, 210, 281, 210, 210, 210, 210, 
        214, 210, 210, 210, 210, 210, 210, 210, 
        215, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 216, 210, 217, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 218, 210, 220, 
        220, 221, 221, 220, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 220, 219, 
        222, 219, 219, 219, 219, 209, 219, 219, 
        219, 219, 219, 282, 282, 283, 282, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        282, 219, 224, 219, 284, 282, 219, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        282, 219, 226, 219, 219, 282, 219, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        282, 219, 285, 285, 286, 286, 285, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 285, 219, 222, 219, 219, 219, 219, 
        209, 219, 219, 219, 219, 219, 287, 287, 
        288, 287, 287, 287, 287, 287, 287, 287, 
        287, 287, 287, 287, 219, 224, 289, 290, 
        287, 219, 287, 287, 287, 287, 287, 287, 
        287, 287, 287, 287, 287, 287, 287, 287, 
        287, 287, 287, 287, 287, 287, 287, 287, 
        287, 287, 287, 287, 219, 226, 219, 219, 
        287, 219, 287, 287, 287, 287, 287, 287, 
        287, 287, 287, 287, 287, 287, 287, 287, 
        287, 287, 287, 287, 287, 287, 287, 287, 
        287, 287, 287, 287, 219, 291, 291, 291, 
        291, 291, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 291, 224, 228, 224, 
        224, 224, 224, 174, 224, 224, 224, 224, 
        224, 229, 229, 230, 229, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 224, 
        224, 292, 231, 229, 224, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 224, 
        232, 224, 224, 229, 224, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 229, 
        229, 229, 229, 229, 229, 229, 229, 224, 
        293, 293, 293, 293, 293, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 293, 
        224, 228, 224, 224, 224, 224, 174, 224, 
        224, 224, 224, 224, 294, 294, 295, 294, 
        294, 294, 294, 294, 294, 294, 294, 294, 
        294, 294, 224, 224, 296, 297, 294, 224, 
        294, 294, 294, 294, 294, 294, 294, 294, 
        294, 294, 294, 294, 294, 294, 294, 294, 
        294, 294, 294, 294, 294, 294, 294, 294, 
        294, 294, 224, 232, 224, 224, 294, 224, 
        294, 294, 294, 294, 294, 294, 294, 294, 
        294, 294, 294, 294, 294, 294, 294, 294, 
        294, 294, 294, 294, 294, 294, 294, 294, 
        294, 294, 224, 228, 224, 224, 224, 224, 
        174, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 298, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 232, 224, 299, 
        224, 224, 224, 224, 299, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 232, 224, 300, 300, 301, 301, 300, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 300, 210, 302, 210, 210, 210, 
        210, 303, 210, 210, 210, 210, 210, 210, 
        210, 304, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 224, 210, 
        231, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 218, 210, 
        305, 305, 306, 306, 305, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 305, 
        210, 302, 210, 210, 210, 210, 303, 210, 
        210, 210, 210, 210, 210, 210, 304, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 224, 210, 231, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 218, 210, 305, 305, 306, 
        306, 305, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 305, 210, 302, 210, 
        210, 210, 210, 303, 210, 210, 210, 210, 
        210, 307, 307, 304, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 210, 
        224, 210, 231, 307, 210, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 210, 
        218, 210, 210, 307, 210, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 210, 
        308, 308, 309, 309, 308, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 308, 
        210, 310, 210, 210, 210, 210, 311, 210, 
        210, 210, 210, 210, 307, 307, 312, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 210, 224, 210, 284, 307, 210, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 210, 218, 210, 210, 307, 210, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 210, 211, 211, 212, 212, 211, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 211, 210, 281, 210, 210, 210, 
        210, 214, 210, 210, 210, 210, 210, 307, 
        307, 312, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 210, 216, 210, 
        313, 307, 210, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 210, 218, 210, 
        210, 307, 210, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 210, 220, 220, 
        221, 221, 220, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 220, 219, 222, 
        219, 219, 219, 219, 209, 219, 219, 219, 
        219, 219, 219, 219, 223, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 224, 219, 225, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 226, 219, 220, 220, 221, 221, 220, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 220, 219, 314, 219, 219, 219, 
        219, 314, 219, 219, 219, 219, 219, 219, 
        219, 223, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 224, 219, 
        225, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 226, 219, 
        211, 211, 212, 212, 211, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 211, 
        210, 213, 210, 210, 210, 210, 214, 210, 
        210, 210, 210, 210, 307, 307, 312, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 210, 216, 210, 313, 307, 210, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 210, 218, 210, 210, 307, 210, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 307, 307, 307, 307, 307, 307, 
        307, 307, 210, 315, 315, 315, 315, 315, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 315, 216, 316, 216, 216, 216, 
        216, 317, 216, 216, 216, 216, 216, 318, 
        318, 319, 318, 318, 318, 318, 318, 318, 
        318, 318, 318, 318, 318, 216, 216, 216, 
        320, 318, 216, 318, 318, 318, 318, 318, 
        318, 318, 318, 318, 318, 318, 318, 318, 
        318, 318, 318, 318, 318, 318, 318, 318, 
        318, 318, 318, 318, 318, 216, 321, 216, 
        216, 318, 216, 318, 318, 318, 318, 318, 
        318, 318, 318, 318, 318, 318, 318, 318, 
        318, 318, 318, 318, 318, 318, 318, 318, 
        318, 318, 318, 318, 318, 216, 315, 315, 
        315, 315, 315, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 315, 216, 322, 
        216, 216, 216, 216, 317, 216, 216, 216, 
        216, 216, 318, 318, 319, 318, 318, 318, 
        318, 318, 318, 318, 318, 318, 318, 318, 
        216, 216, 216, 320, 318, 216, 318, 318, 
        318, 318, 318, 318, 318, 318, 318, 318, 
        318, 318, 318, 318, 318, 318, 318, 318, 
        318, 318, 318, 318, 318, 318, 318, 318, 
        216, 321, 216, 216, 318, 216, 318, 318, 
        318, 318, 318, 318, 318, 318, 318, 318, 
        318, 318, 318, 318, 318, 318, 318, 318, 
        318, 318, 318, 318, 318, 318, 318, 318, 
        216, 308, 308, 309, 309, 308, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        308, 210, 310, 210, 210, 210, 210, 311, 
        210, 210, 210, 210, 210, 210, 210, 215, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 224, 210, 225, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 210, 210, 210, 210, 
        210, 210, 210, 210, 218, 210, 323, 323, 
        324, 324, 323, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 219, 219, 219, 
        219, 219, 219, 219, 219, 323, 219, 222, 
        219, 219, 219, 219, 209, 219, 219, 219, 
        219, 219, 282, 282, 283, 282, 282, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        219, 224, 325, 284, 282, 219, 282, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        219, 226, 219, 219, 282, 219, 282, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        282, 282, 282, 282, 282, 282, 282, 282, 
        219, 326, 326, 327, 327, 326, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        326, 247, 247, 247, 247, 247, 247, 155, 
        247, 247, 247, 247, 247, 279, 279, 280, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 247, 328, 247, 329, 279, 
        247, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 247, 253, 247, 247, 279, 
        247, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 279, 279, 279, 279, 279, 
        279, 279, 279, 247, 316, 216, 216, 216, 
        216, 317, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 321, 216, 
        330, 330, 330, 330, 330, 328, 328, 328, 
        328, 328, 328, 328, 328, 328, 328, 328, 
        328, 328, 328, 328, 328, 328, 328, 330, 
        328, 328, 328, 328, 328, 328, 331, 328, 
        328, 328, 328, 328, 332, 332, 333, 332, 
        332, 332, 332, 332, 332, 332, 332, 332, 
        332, 332, 328, 328, 328, 334, 332, 328, 
        332, 332, 332, 332, 332, 332, 332, 332, 
        332, 332, 332, 332, 332, 332, 332, 332, 
        332, 332, 332, 332, 332, 332, 332, 332, 
        332, 332, 328, 335, 328, 328, 332, 328, 
        332, 332, 332, 332, 332, 332, 332, 332, 
        332, 332, 332, 332, 332, 332, 332, 332, 
        332, 332, 332, 332, 332, 332, 332, 332, 
        332, 332, 328, 277, 277, 278, 278, 277, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 277, 247, 250, 247, 247, 247, 
        247, 251, 247, 247, 247, 247, 247, 247, 
        247, 252, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 233, 247, 
        237, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 253, 247, 
        336, 336, 336, 336, 336, 157, 157, 157, 
        157, 157, 157, 157, 157, 157, 157, 157, 
        157, 157, 157, 157, 157, 157, 157, 336, 
        157, 331, 157, 157, 157, 157, 157, 157, 
        157, 157, 157, 157, 337, 337, 338, 337, 
        337, 337, 337, 337, 337, 337, 337, 337, 
        337, 337, 157, 157, 157, 339, 337, 157, 
        337, 337, 337, 337, 337, 337, 337, 337, 
        337, 337, 337, 337, 337, 337, 337, 337, 
        337, 337, 337, 337, 337, 337, 337, 337, 
        337, 337, 157, 340, 157, 157, 337, 157, 
        337, 337, 337, 337, 337, 337, 337, 337, 
        337, 337, 337, 337, 337, 337, 337, 337, 
        337, 337, 337, 337, 337, 337, 337, 337, 
        337, 337, 157, 322, 216, 216, 216, 216, 
        317, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 216, 216, 216, 
        216, 216, 216, 216, 216, 321, 216, 326, 
        326, 327, 327, 326, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 326, 247, 
        247, 247, 247, 247, 247, 155, 247, 247, 
        247, 247, 247, 247, 247, 276, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 328, 247, 341, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 247, 247, 247, 247, 247, 247, 
        247, 247, 253, 247, 331, 157, 157, 157, 
        157, 157, 157, 157, 157, 157, 157, 157, 
        157, 157, 157, 157, 157, 157, 157, 157, 
        157, 157, 157, 157, 157, 157, 157, 157, 
        157, 157, 157, 157, 157, 157, 157, 157, 
        157, 157, 157, 157, 157, 157, 157, 157, 
        157, 157, 157, 157, 157, 157, 157, 157, 
        157, 157, 157, 157, 157, 157, 340, 157, 
        331, 328, 328, 328, 328, 328, 328, 328, 
        328, 328, 328, 328, 328, 328, 328, 328, 
        328, 328, 328, 328, 328, 328, 328, 328, 
        328, 328, 328, 328, 328, 328, 328, 328, 
        328, 328, 328, 328, 328, 328, 328, 328, 
        328, 328, 328, 328, 328, 328, 328, 328, 
        328, 328, 328, 328, 328, 335, 328, 148, 
        148, 149, 149, 148, 119, 119, 119, 119, 
        119, 119, 119, 119, 119, 119, 119, 119, 
        119, 119, 119, 119, 119, 119, 148, 119, 
        122, 119, 119, 119, 119, 123, 119, 119, 
        119, 119, 119, 119, 119, 124, 119, 119, 
        119, 119, 119, 119, 119, 119, 119, 119, 
        119, 119, 39, 119, 117, 119, 342, 0, 
        0, 0, 0, 0, 0, 342, 342, 342, 
        342, 342, 342, 342, 342, 342, 342, 342, 
        342, 342, 342, 342, 342, 342, 342, 342, 
        342, 342, 342, 342, 342, 342, 342, 0, 
        0, 0, 0, 342, 0, 342, 342, 342, 
        342, 342, 342, 342, 342, 342, 342, 342, 
        342, 342, 342, 342, 342, 342, 342, 342, 
        342, 342, 342, 342, 343, 342, 342, 0, 
        344, 344, 344, 344, 344, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 344, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 345, 345, 0, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 0, 0, 0, 0, 345, 0, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 0, 0, 0, 0, 345, 0, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 0, 344, 344, 344, 344, 344, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 344, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 345, 
        345, 0, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 0, 0, 0, 
        0, 345, 0, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 0, 0, 0, 
        0, 345, 0, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 346, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 0, 344, 344, 
        344, 344, 344, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 344, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 345, 345, 0, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        0, 0, 0, 0, 345, 0, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        0, 0, 0, 0, 345, 0, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 347, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        0, 348, 348, 348, 348, 348, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        348, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 345, 345, 0, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 0, 0, 0, 0, 345, 
        0, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 0, 0, 0, 0, 345, 
        0, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 345, 345, 345, 345, 345, 
        345, 345, 345, 0, 350, 349, 351, 349, 
        352, 349, 353, 349, 354, 349, 355, 349, 
        355, 355, 355, 355, 355, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 355, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 356, 349, 356, 356, 
        356, 356, 356, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 356, 349, 357, 
        349, 349, 349, 349, 358, 349, 359, 359, 
        349, 359, 359, 359, 359, 359, 359, 359, 
        359, 359, 359, 359, 349, 349, 349, 349, 
        349, 349, 359, 359, 359, 359, 359, 359, 
        359, 359, 359, 359, 359, 359, 359, 359, 
        359, 359, 359, 359, 359, 359, 359, 359, 
        359, 359, 359, 359, 349, 349, 349, 349, 
        359, 349, 359, 359, 359, 359, 359, 359, 
        359, 359, 359, 359, 359, 359, 359, 359, 
        359, 359, 359, 359, 359, 359, 359, 359, 
        359, 359, 359, 359, 349, 360, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        361, 361, 349, 361, 361, 361, 361, 361, 
        361, 361, 361, 361, 361, 361, 349, 349, 
        349, 349, 349, 349, 361, 361, 361, 361, 
        361, 361, 361, 361, 361, 361, 361, 361, 
        361, 361, 361, 361, 361, 361, 361, 361, 
        361, 361, 361, 361, 361, 361, 349, 349, 
        349, 349, 361, 349, 361, 361, 361, 361, 
        361, 361, 361, 361, 361, 361, 361, 361, 
        361, 361, 361, 361, 361, 361, 361, 361, 
        361, 361, 361, 361, 361, 361, 349, 362, 
        362, 362, 362, 362, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 362, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 363, 364, 349, 362, 
        362, 362, 362, 362, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 362, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 363, 364, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 365, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 366, 349, 363, 349, 367, 349, 368, 
        349, 369, 349, 370, 349, 371, 349, 372, 
        349, 373, 349, 373, 373, 373, 373, 373, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 373, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 374, 
        349, 374, 374, 374, 374, 374, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        374, 349, 375, 349, 349, 349, 349, 376, 
        349, 377, 377, 377, 377, 377, 377, 377, 
        377, 377, 377, 377, 377, 377, 377, 377, 
        377, 377, 377, 377, 377, 377, 377, 377, 
        377, 377, 377, 349, 349, 349, 349, 349, 
        349, 377, 377, 377, 377, 377, 377, 377, 
        377, 377, 377, 377, 377, 377, 377, 377, 
        377, 377, 377, 377, 377, 377, 377, 377, 
        377, 377, 377, 349, 378, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 379, 
        379, 349, 379, 379, 379, 379, 379, 379, 
        379, 379, 379, 379, 349, 349, 349, 349, 
        349, 349, 349, 379, 379, 379, 379, 379, 
        379, 379, 379, 379, 379, 379, 379, 379, 
        379, 379, 379, 379, 379, 379, 379, 379, 
        379, 379, 379, 379, 379, 349, 349, 349, 
        349, 379, 349, 379, 379, 379, 379, 379, 
        379, 379, 379, 379, 379, 379, 379, 379, 
        379, 379, 379, 379, 379, 379, 379, 379, 
        379, 379, 379, 379, 379, 349, 380, 380, 
        380, 380, 380, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 380, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 363, 364, 349, 380, 380, 
        380, 380, 380, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 380, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 363, 364, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        366, 349, 381, 349, 382, 349, 383, 349, 
        384, 349, 385, 349, 386, 349, 387, 349, 
        388, 349, 389, 349, 389, 389, 389, 389, 
        389, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 389, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        390, 349, 390, 390, 390, 390, 390, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 390, 349, 391, 349, 349, 349, 349, 
        392, 349, 393, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 394, 349, 395, 
        349, 396, 349, 397, 397, 397, 397, 397, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 397, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        363, 364, 349, 398, 349, 395, 349, 399, 
        349, 349, 349, 349, 349, 349, 349, 349, 
        349, 349, 400, 349, 401, 349, 396, 349, 
        402, 349, 401, 349, 403, 403, 403, 403, 
        403, 403, 403, 403, 403, 403, 403, 403, 
        403, 403, 403, 403, 403, 403, 403, 403, 
        403, 403, 403, 403, 403, 403, 349, 349, 
        349, 349, 349, 349, 403, 403, 403, 403, 
        403, 403, 403, 403, 403, 403, 403, 403, 
        403, 403, 403, 403, 403, 403, 403, 403, 
        403, 403, 403, 403, 403, 403, 349, 378, 
        349, 349, 349, 349, 349, 404, 404, 349, 
        404, 404, 404, 404, 404, 404, 404, 404, 
        404, 404, 349, 349, 349, 349, 349, 349, 
        349, 404, 404, 404, 404, 404, 404, 404, 
        404, 404, 404, 404, 404, 404, 404, 404, 
        404, 404, 404, 404, 404, 404, 404, 404, 
        404, 404, 404, 349, 349, 349, 349, 404, 
        349, 404, 404, 404, 404, 404, 404, 404, 
        404, 404, 404, 404, 404, 404, 404, 404, 
        404, 404, 404, 404, 404, 404, 404, 404, 
        404, 404, 404, 349, 405, 405, 349, 405, 
        405, 405, 405, 405, 405, 405, 405, 405, 
        405, 405, 349, 349, 349, 349, 349, 349, 
        405, 405, 405, 405, 405, 405, 405, 405, 
        405, 405, 405, 405, 405, 405, 405, 405, 
        405, 405, 405, 405, 405, 405, 405, 405, 
        405, 405, 349, 349, 349, 349, 405, 349, 
        405, 405, 405, 405, 405, 405, 405, 405, 
        405, 405, 405, 405, 405, 405, 405, 405, 
        405, 405, 405, 405, 405, 405, 405, 405, 
        405, 405, 349, 360, 349, 349, 349, 349, 
        349, 406, 406, 349, 406, 406, 406, 406, 
        406, 406, 406, 406, 406, 406, 406, 349, 
        349, 349, 349, 349, 349, 406, 406, 406, 
        406, 406, 406, 406, 406, 406, 406, 406, 
        406, 406, 406, 406, 406, 406, 406, 406, 
        406, 406, 406, 406, 406, 406, 406, 349, 
        349, 349, 349, 406, 349, 406, 406, 406, 
        406, 406, 406, 406, 406, 406, 406, 406, 
        406, 406, 406, 406, 406, 406, 406, 406, 
        406, 406, 406, 406, 406, 406, 406, 349, 
        408, 407, 410, 409, 412, 411, 411, 411, 
        411, 411, 411, 411, 411, 411, 411, 411, 
        411, 411, 411, 411, 411, 411, 411, 411, 
        411, 411, 411, 411, 411, 411, 411, 411, 
        411, 411, 411, 411, 411, 411, 411, 411, 
        411, 411, 411, 411, 411, 411, 411, 411, 
        411, 411, 411, 411, 411, 411, 413, 411, 
        415, 414, 414, 414, 414, 414, 414, 414, 
        414, 414, 414, 414, 414, 414, 416, 414, 
        414, 414, 414, 414, 414, 414, 414, 414, 
        414, 417, 414, 414, 414, 414, 418, 414, 
        417, 417, 417, 417, 417, 417, 417, 417, 
        417, 417, 417, 417, 417, 417, 417, 417, 
        417, 417, 417, 417, 417, 417, 417, 417, 
        417, 417, 414, 414, 414, 414, 417, 414, 
        417, 417, 417, 417, 417, 417, 417, 417, 
        417, 417, 417, 417, 417, 417, 417, 417, 
        417, 417, 417, 417, 417, 417, 417, 417, 
        417, 417, 414, 41, 45, 43, 21, 41, 
        40, 169, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 165, 165, 165, 165, 165, 
        165, 165, 165, 173, 165, 169, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 233, 233, 233, 233, 233, 233, 
        233, 233, 238, 233, 228, 224, 224, 224, 
        224, 174, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 224, 224, 
        224, 224, 224, 224, 224, 224, 232, 224, 
        344, 344, 344, 344, 344, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 344, 
        420, 348, 348, 348, 348, 348, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 420, 
        348, 420, 420, 420, 420, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 420, 420, 
        420, 420, 420, 420, 420, 420, 421, 420, 
        423, 422, 422, 422, 422, 422, 422, 422, 
        422, 422, 422, 422, 422, 422, 422, 422, 
        422, 422, 422, 422, 422, 422, 422, 422, 
        422, 422, 422, 422, 422, 422, 422, 422, 
        422, 422, 422, 424, 422, 426, 425, 428, 
        427, 427, 427, 427, 427, 427, 427, 427, 
        427, 427, 427, 427, 427, 427, 427, 427, 
        427, 427, 427, 427, 427, 427, 427, 427, 
        427, 427, 427, 427, 427, 427, 427, 427, 
        427, 427, 427, 427, 427, 427, 427, 427, 
        427, 427, 427, 427, 427, 427, 427, 427, 
        427, 427, 427, 427, 427, 427, 427, 427, 
        427, 427, 427, 427, 427, 427, 427, 427, 
        427, 427, 427, 427, 427, 427, 427, 427, 
        427, 427, 427, 427, 427, 427, 427, 427, 
        427, 427, 429, 427, 431, 430, 433, 432, 
        432, 432, 432, 432, 432, 432, 432, 432, 
        432, 432, 432, 432, 432, 432, 432, 432, 
        432, 432, 432, 432, 432, 432, 432, 432, 
        432, 432, 432, 432, 432, 432, 432, 432, 
        432, 432, 432, 432, 432, 432, 432, 432, 
        432, 432, 432, 432, 432, 432, 432, 432, 
        432, 432, 434, 435, 432, 434, 436, 0
    ]

    class << self
        attr_accessor :hpricot_scan_trans_targs
        #private :hpricot_scan_trans_targs, :hpricot_scan_trans_targs=
    end
    self.hpricot_scan_trans_targs = [
        204, 1, 2, 53, 204, 3, 4, 5, 
        6, 7, 8, 9, 10, 11, 10, 204, 
        26, 11, 204, 12, 48, 26, 13, 14, 
        15, 16, 17, 18, 19, 30, 20, 21, 
        20, 21, 22, 23, 28, 24, 25, 204, 
        24, 25, 25, 27, 29, 29, 31, 32, 
        31, 32, 33, 34, 35, 36, 47, 32, 
        206, 40, 35, 36, 47, 37, 34, 206, 
        40, 46, 38, 39, 43, 38, 39, 43, 
        39, 41, 42, 41, 207, 43, 208, 44, 
        45, 39, 32, 49, 50, 51, 52, 21, 
        54, 55, 56, 57, 58, 204, 60, 61, 
        60, 204, 61, 204, 63, 62, 66, 204, 
        63, 64, 66, 204, 65, 64, 66, 67, 
        204, 65, 64, 66, 67, 204, 204, 68, 
        144, 74, 142, 143, 73, 68, 69, 70, 
        73, 204, 69, 71, 73, 204, 65, 72, 
        71, 73, 74, 204, 65, 72, 74, 75, 
        76, 77, 141, 73, 75, 76, 71, 73, 
        78, 79, 90, 70, 93, 80, 209, 94, 
        78, 79, 90, 70, 93, 80, 209, 94, 
        79, 69, 82, 84, 209, 81, 79, 83, 
        82, 84, 85, 209, 83, 85, 209, 86, 
        95, 139, 140, 93, 87, 88, 91, 87, 
        88, 89, 96, 93, 209, 209, 91, 93, 
        83, 92, 91, 93, 95, 209, 83, 92, 
        95, 90, 97, 98, 117, 108, 90, 128, 
        99, 211, 129, 97, 98, 117, 108, 128, 
        99, 211, 129, 98, 100, 120, 121, 211, 
        122, 101, 100, 103, 105, 210, 102, 104, 
        103, 105, 106, 210, 104, 106, 210, 107, 
        138, 113, 136, 137, 111, 112, 107, 100, 
        108, 111, 210, 112, 109, 111, 210, 104, 
        110, 109, 111, 113, 210, 104, 110, 113, 
        114, 115, 116, 135, 111, 114, 115, 109, 
        111, 108, 118, 128, 211, 119, 134, 118, 
        128, 133, 211, 119, 123, 119, 120, 121, 
        123, 211, 211, 98, 124, 133, 131, 132, 
        128, 125, 126, 118, 125, 126, 127, 130, 
        128, 211, 117, 98, 100, 79, 120, 121, 
        211, 122, 100, 119, 134, 133, 100, 108, 
        101, 210, 100, 69, 103, 105, 210, 102, 
        79, 82, 84, 209, 81, 210, 146, 147, 
        212, 146, 148, 149, 213, 204, 151, 152, 
        153, 154, 155, 156, 157, 158, 200, 159, 
        160, 159, 161, 204, 162, 163, 176, 164, 
        165, 166, 167, 168, 169, 170, 171, 172, 
        198, 173, 174, 173, 175, 177, 178, 179, 
        180, 181, 182, 183, 184, 185, 186, 187, 
        193, 188, 191, 189, 190, 190, 192, 194, 
        196, 195, 197, 199, 199, 201, 201, 214, 
        214, 216, 216, 204, 204, 205, 204, 0, 
        59, 62, 145, 204, 204, 150, 214, 214, 
        215, 214, 202, 216, 216, 217, 216, 203, 
        218, 218, 218, 219, 218
    ]

    class << self
        attr_accessor :hpricot_scan_trans_actions
        #private :hpricot_scan_trans_actions, :hpricot_scan_trans_actions=
    end
    self.hpricot_scan_trans_actions = [
        1, 0, 0, 0, 2, 0, 0, 0, 
        0, 0, 0, 0, 3, 4, 0, 5, 
        4, 0, 6, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 7, 8, 
        0, 9, 0, 0, 0, 7, 10, 11, 
        0, 12, 0, 0, 7, 0, 7, 8, 
        0, 9, 0, 9, 7, 7, 7, 13, 
        14, 7, 0, 0, 0, 0, 15, 16, 
        0, 12, 7, 10, 10, 0, 12, 12, 
        0, 12, 0, 0, 16, 0, 16, 0, 
        0, 7, 15, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 17, 3, 4, 
        0, 18, 0, 19, 4, 0, 4, 20, 
        0, 21, 0, 22, 23, 0, 24, 23, 
        25, 0, 26, 27, 0, 28, 29, 7, 
        7, 7, 0, 0, 30, 0, 31, 31, 
        32, 33, 0, 26, 34, 35, 36, 36, 
        0, 37, 23, 38, 31, 31, 0, 39, 
        39, 0, 0, 40, 7, 7, 41, 42, 
        7, 39, 39, 43, 40, 7, 44, 7, 
        0, 31, 31, 45, 32, 0, 46, 0, 
        0, 45, 26, 27, 47, 0, 45, 23, 
        0, 24, 23, 48, 0, 0, 49, 7, 
        7, 45, 0, 30, 7, 7, 41, 39, 
        39, 45, 0, 42, 50, 51, 26, 34, 
        36, 36, 0, 37, 23, 52, 31, 31, 
        0, 45, 7, 39, 39, 53, 43, 40, 
        7, 44, 7, 0, 31, 31, 45, 32, 
        0, 46, 0, 0, 45, 26, 27, 47, 
        0, 0, 0, 26, 27, 47, 0, 23, 
        0, 24, 23, 48, 0, 0, 49, 7, 
        7, 7, 0, 45, 30, 7, 0, 31, 
        31, 32, 46, 0, 26, 34, 50, 36, 
        36, 0, 37, 23, 52, 31, 31, 0, 
        39, 39, 0, 45, 40, 7, 7, 41, 
        42, 43, 26, 34, 50, 36, 36, 0, 
        37, 23, 52, 0, 0, 23, 0, 24, 
        23, 48, 49, 45, 7, 7, 45, 45, 
        30, 7, 7, 41, 39, 39, 45, 45, 
        42, 51, 45, 7, 43, 43, 41, 30, 
        54, 7, 53, 31, 31, 0, 39, 39, 
        7, 51, 7, 43, 41, 30, 54, 7, 
        7, 41, 30, 54, 7, 44, 55, 55, 
        0, 0, 0, 0, 56, 57, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 7, 
        58, 0, 0, 59, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 7, 60, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 7, 7, 0, 61, 0, 0, 7, 
        7, 0, 0, 7, 0, 7, 0, 62, 
        63, 64, 65, 68, 69, 70, 71, 0, 
        0, 3, 0, 72, 73, 0, 74, 75, 
        56, 76, 0, 77, 78, 56, 79, 0, 
        80, 81, 82, 0, 83
    ]

    class << self
        attr_accessor :hpricot_scan_to_state_actions
        #private :hpricot_scan_to_state_actions, :hpricot_scan_to_state_actions=
    end
    self.hpricot_scan_to_state_actions = [
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 66, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 66, 0, 
        66, 0, 66, 0
    ]

    class << self
        attr_accessor :hpricot_scan_from_state_actions
        #private :hpricot_scan_from_state_actions, :hpricot_scan_from_state_actions=
    end
    self.hpricot_scan_from_state_actions = [
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 67, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 67, 0, 
        67, 0, 67, 0
    ]

    class << self
        attr_accessor :hpricot_scan_eof_trans
        #private :hpricot_scan_eof_trans, :hpricot_scan_eof_trans=
    end
    self.hpricot_scan_eof_trans = [
        1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 
        40, 40, 40, 40, 1, 40, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 40, 40, 40, 40, 40, 40, 40, 
        40, 1, 1, 1, 1, 1, 350, 350, 
        350, 350, 350, 350, 350, 350, 350, 350, 
        350, 350, 350, 350, 350, 350, 350, 350, 
        350, 350, 350, 350, 350, 350, 350, 350, 
        350, 350, 350, 350, 350, 350, 350, 350, 
        350, 350, 350, 350, 350, 350, 350, 350, 
        350, 350, 350, 350, 350, 350, 350, 350, 
        350, 350, 408, 410, 0, 415, 420, 420, 
        420, 40, 40, 40, 421, 421, 0, 426, 
        0, 431, 0, 437
    ]

    class << self
        attr_accessor :hpricot_scan_start
    end
    self.hpricot_scan_start = 204;
    class << self
        attr_accessor :hpricot_scan_error
    end
    self.hpricot_scan_error = -1;

    class << self
        attr_accessor :hpricot_scan_en_html_comment
    end
    self.hpricot_scan_en_html_comment = 214;
    class << self
        attr_accessor :hpricot_scan_en_html_cdata
    end
    self.hpricot_scan_en_html_cdata = 216;
    class << self
        attr_accessor :hpricot_scan_en_html_procins
    end
    self.hpricot_scan_en_html_procins = 218;
    class << self
        attr_accessor :hpricot_scan_en_main
    end
    self.hpricot_scan_en_main = 204;

    def hpricot_scan(source, &block)
        raise LocalJumpError, "no block given in 'hpricot_scan'" unless block_given?

        @buf   = ''
        @block = block
        @attr  = nil
        @taint = source.tainted?
        @tag, @akey, @aval = [nil], [nil], [nil]

        unless source.respond_to? 'read' then
            if source.respond_to? 'to_str' then
                source = source.to_str
            else
                raise ArgumentError, "bad Hpricot argument, String or IO only please."
            end
        end

        begin
            @cs = HpricotScanner::hpricot_scan_start
            @ts, @te, @act = -1, -1, 0
        end

        while (!@done)
            str, pe, len = nil, nil, nil
            @p = @have

            space = @buffer_size - @have

            if space == 0 then
                @buffer_size += DEFAULT_BUFFER_SIZE;
                space = @buffer_size - @have;
            end

            str = source.respond_to?('read') ? source.read(space) : source[@nread, space]
            len = str.length

            @buf   = @buf + str
            @nread = @nread + len

            if len < space then
                len   = len + 1
                @done = true
            end

            pe   = @p + len;
            data = @buf;

            begin
                testEof = false
                _slen, _trans, _keys, _inds, _acts, _nacts = nil, nil, nil, nil, nil, nil
                _goto_level = 0
                _resume = 10
                _eof_trans = 15
                _again = 20
                _test_eof = 30
                _out = 40
                while true
                if _goto_level <= 0
                if @p == pe -1
                    _goto_level = _test_eof
                    next
                end
                end
                if _goto_level <= _resume
                case HpricotScanner.hpricot_scan_from_state_actions[@cs] 
                when 67 then
                    begin
            @ts = @p
                    end
                end
                _keys = @cs << 1
                _inds = HpricotScanner.hpricot_scan_index_offsets[@cs]
                _slen = HpricotScanner.hpricot_scan_key_spans[@cs]
                _trans = if (   _slen > 0 && 
                        HpricotScanner.hpricot_scan_trans_keys[_keys] <= data[@p] && 
                        data[@p] <= HpricotScanner.hpricot_scan_trans_keys[_keys + 1] 
                        ) then
                        HpricotScanner.hpricot_scan_indicies[ _inds + data[@p] - HpricotScanner.hpricot_scan_trans_keys[_keys] ] 
                     else 
                        HpricotScanner.hpricot_scan_indicies[ _inds + _slen ]
                     end
                end
                if _goto_level <= _eof_trans
                @cs = HpricotScanner.hpricot_scan_trans_targs[_trans]
                if HpricotScanner.hpricot_scan_trans_actions[_trans] != 0
                case HpricotScanner.hpricot_scan_trans_actions[_trans]
                when 3 then
                    begin
             @mark_tag = @p; 		end
                when 7 then
                    begin
             @mark_aval = @p; 		end
                when 4 then
                    begin
             SET(@tag, @p); 		end
                when 45 then
                    begin
             SET(@aval, @p); 		end
                when 31 then
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p) end
                    end
                when 23 then
                    begin
             SET(@akey, @p); 		end
                when 58 then
                    begin
             SET(@aval, @p); ATTR(rb_str_new2("version"), @aval); 		end
                when 60 then
                    begin
             SET(@aval, @p); ATTR(rb_str_new2("encoding"), @aval); 		end
                when 61 then
                    begin
             SET(@aval, @p); ATTR(rb_str_new2("standalone"), @aval); 		end
                when 9 then
                    begin
             SET(@aval, @p); ATTR(rb_str_new2("public_id"), @aval); 		end
                when 12 then
                    begin
             SET(@aval, @p); ATTR(rb_str_new2("system_id"), @aval); 		end
                when 27 then
                    begin
             
                ATTR(@akey, @aval);
                    end
                when 55 then
                    begin
             TEXT_PASS(); 		end
                when 56 then
                    begin
            @te = @p+1
                    end
                when 74 then
                    begin
            @te = @p+1
             begin  TEXT_PASS();  end
                    end
                when 76 then
                    begin
            @te = @p
            @p = @p - 1; begin  TEXT_PASS();  end
                    end
                when 62 then
                    begin
             begin @p = ((@te))-1; end
             begin  TEXT_PASS();  end
                    end
                when 77 then
                    begin
            @te = @p+1
             begin  TEXT_PASS();  end
                    end
                when 79 then
                    begin
            @te = @p
            @p = @p - 1; begin  TEXT_PASS();  end
                    end
                when 64 then
                    begin
             begin @p = ((@te))-1; end
             begin  TEXT_PASS();  end
                    end
                when 80 then
                    begin
            @te = @p+1
             begin  TEXT_PASS();  end
                    end
                when 83 then
                    begin
            @te = @p
            @p = @p - 1; begin  TEXT_PASS();  end
                    end
                when 59 then
                    begin
            @te = @p+1
             begin  ELE(:xmldecl);  end
                    end
                when 6 then
                    begin
            @te = @p+1
             begin  ELE(:doctype);  end
                    end
                when 22 then
                    begin
            @te = @p+1
             begin  ELE(:stag);  end
                    end
                when 19 then
                    begin
            @te = @p+1
             begin  ELE(:etag);  end
                    end
                when 29 then
                    begin
            @te = @p+1
             begin  ELE(:emptytag);  end
                    end
                when 2 then
                    begin
            @te = @p+1
             begin  	begin
                    @cs = 214
                    _goto_level = _again
                    next
                end
              end
                    end
                when 17 then
                    begin
            @te = @p+1
             begin  	begin
                    @cs = 216
                    _goto_level = _again
                    next
                end
              end
                    end
                when 68 then
                    begin
            @te = @p+1
             begin  TEXT_PASS();  end
                    end
                when 72 then
                    begin
            @te = @p
            @p = @p - 1; begin  ELE(:doctype);  end
                    end
                when 73 then
                    begin
            @te = @p
            @p = @p - 1; begin  	begin
                    @cs = 218
                    _goto_level = _again
                    next
                end
              end
                    end
                when 71 then
                    begin
            @te = @p
            @p = @p - 1; begin  TEXT_PASS();  end
                    end
                when 57 then
                    begin
             begin @p = ((@te))-1; end
             begin  	begin
                    @cs = 218
                    _goto_level = _again
                    next
                end
              end
                    end
                when 1 then
                    begin
             begin @p = ((@te))-1; end
             begin  TEXT_PASS();  end
                    end
                when 11 then
                    begin
                case @act
                when 8 then
                begin begin @p = ((@te))-1; end
             ELE(:doctype); end
                when 10 then
                begin begin @p = ((@te))-1; end
             ELE(:stag); end
                when 12 then
                begin begin @p = ((@te))-1; end
             ELE(:emptytag); end
                when 15 then
                begin begin @p = ((@te))-1; end
             TEXT_PASS(); end
            end 
                        end
                when 43 then
                    begin
             @mark_aval = @p; 		end
                    begin
             SET(@aval, @p); 		end
                when 39 then
                    begin
             @mark_aval = @p; 		end
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else  SET(@aval, @p) end
                    end
                when 8 then
                    begin
             @mark_aval = @p; 		end
                    begin
             SET(@aval, @p); ATTR(rb_str_new2("public_id"), @aval); 		end
                when 10 then
                    begin
             @mark_aval = @p; 		end
                    begin
             SET(@aval, @p); ATTR(rb_str_new2("system_id"), @aval); 		end
                when 30 then
                    begin
             @mark_aval = @p; 		end
                    begin
             
                ATTR(@akey, @aval);
                    end
                when 5 then
                    begin
             SET(@tag, @p); 		end
                    begin
            @te = @p+1
             begin  ELE(:doctype);  end
                    end
                when 20 then
                    begin
             SET(@tag, @p); 		end
                    begin
            @te = @p+1
             begin  ELE(:stag);  end
                    end
                when 18 then
                    begin
             SET(@tag, @p); 		end
                    begin
            @te = @p+1
             begin  ELE(:etag);  end
                    end
                when 53 then
                    begin
             SET(@aval, @p); 		end
                    begin
             @mark_aval = @p; 		end
                when 32 then
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p) end
                    end
                    begin
             
                ATTR(@akey, @aval);
                    end
                when 36 then
                    begin
             SET(@akey, @p); 		end
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p) end
                    end
                when 24 then
                    begin
             SET(@akey, @p); 		end
                    begin
             
                ATTR(@akey, @aval);
                    end
                when 15 then
                    begin
             SET(@aval, @p); ATTR(rb_str_new2("public_id"), @aval); 		end
                    begin
             SET(@aval, @p); ATTR(rb_str_new2("system_id"), @aval); 		end
                when 21 then
                    begin
             
                @akey[0] = nil
                @aval[0] = nil
                @mark_akey = -1;
                @mark_aval = -1;
                    end
                    begin
             @mark_akey = @p; 		end
                when 34 then
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p) end
                    end
                when 28 then
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
            @te = @p+1
             begin  ELE(:stag);  end
                    end
                when 75 then
                    begin
            @curline += 1;		end
                    begin
            @te = @p+1
             begin  TEXT_PASS();  end
                    end
                when 78 then
                    begin
            @curline += 1;		end
                    begin
            @te = @p+1
             begin  TEXT_PASS();  end
                    end
                when 81 then
                    begin
            @curline += 1;		end
                    begin
            @te = @p+1
             begin  TEXT_PASS();  end
                    end
                when 69 then
                    begin
            @curline += 1;		end
                    begin
            @te = @p+1
             begin  TEXT_PASS();  end
                    end
                when 63 then
                    begin
             EBLK(:comment, 3); 	begin
                    @cs = 204
                    _goto_level = _again
                    next
                end
                    end
                    begin
            @te = @p+1
                    end
                when 65 then
                    begin
             EBLK(:cdata, 3); 	begin
                    @cs = 204
                    _goto_level = _again
                    next
                end
                    end
                    begin
            @te = @p+1
                    end
                when 82 then
                    begin
             EBLK(:procins, 2); 	begin
                    @cs = 204
                    _goto_level = _again
                    next
                end
                    end
                    begin
            @te = @p+1
                    end
                when 16 then
                    begin
            @te = @p+1
                    end
                    begin
            @act = 8;		end
                when 49 then
                    begin
            @te = @p+1
                    end
                    begin
            @act = 12;		end
                when 40 then
                    begin
             @mark_aval = @p; 		end
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p) end
                    end
                    begin
             
                ATTR(@akey, @aval);
                    end
                when 42 then
                    begin
             @mark_aval = @p; 		end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p) end
                    end
                when 37 then
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p) end
                    end
                    begin
             SET(@akey, @p); 		end
                    begin
             
                ATTR(@akey, @aval)
                    end
                when 33 then
                    begin

                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p) end
                    end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
            @te = @p+1
             begin  ELE(:stag);  end
                    end
                when 25 then
                    begin
             SET(@akey, @p); 		end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
            @te = @p+1
             begin  ELE(:stag);  end
                    end
                when 13 then
                    begin
             SET(@aval, @p); ATTR(rb_str_new2("public_id"), @aval); 		end
                    begin
             @mark_aval = @p; 		end
                    begin
             SET(@aval, @p); ATTR(rb_str_new2("system_id"), @aval); 		end
                when 35 then
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1);
                else SET(@aval, @p) end
                    end
                    begin
            @te = @p+1
             begin  ELE(:stag);  end
                    end
                when 26 then
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
             
                @akey[0] = nil
                @aval[0] = nil
                @mark_akey = -1;
                @mark_aval = -1;
                    end
                    begin
             @mark_akey = @p; 		end
                when 70 then
                    begin
            @te = @p+1
                    end
                    begin

                if @text then
                  CAT(@tag, @p);
                  ELE(:text);
                  @text = false;
                end
                @attr = nil
                @tag[0] = nil
                @mark_tag = -1
                @ele_open = true;
                    end
                    begin
            @act = 15;		end
                when 14 then
                    begin
            @te = @p+1
                    end
                    begin
             @mark_aval = @p; 		end
                    begin
            @act = 8;		end
                when 47 then
                    begin
            @te = @p+1
                    end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
            @act = 10;		end
                when 41 then
                    begin
             @mark_aval = @p; 		end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
             
                @akey[0] = nil
                @aval[0] = nil
                @mark_akey = -1;
                @mark_aval = -1;
                    end
                    begin
             @mark_akey = @p; 		end
                when 38 then
                    begin
             
                if (@buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE) then SET(@aval, @p-1)
                else SET(@aval, @p); end
                    end
                    begin
             SET(@akey, @p); 		end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
            @te = @p+1
             begin  ELE(:stag);  end
                    end
                when 54 then
                    begin
            @te = @p+1
                    end
                    begin
             @mark_aval = @p; 		end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
            @act = 10;		end
                when 46 then
                    begin
            @te = @p+1
                    end
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p); end
                    end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
            @act = 10;		end
                when 48 then
                    begin
            @te = @p+1
                    end
                    begin
             SET(@akey, @p); 		end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
            @act = 10;		end
                when 50 then
                    begin
            @te = @p+1
                    end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p); end
                    end
                    begin
            @act = 10;		end
                when 44 then
                    begin
            @te = @p+1
                    end
                    begin
             @mark_aval = @p; 		end
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p); end
                    end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
            @act = 10;		end
                when 51 then
                    begin
            @te = @p+1
                    end
                    begin
             @mark_aval = @p; 		end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p); end
                    end
                    begin
            @act = 10;		end
                when 52 then
                    begin
            @te = @p+1
                    end
                    begin
             
                if @buf[@p-1] == DOUBLE_QUOTE || @buf[@p-1] == SINGLE_QUOTE then SET(@aval, @p-1)
                else SET(@aval, @p); end
                    end
                    begin
             SET(@akey, @p); 		end
                    begin
             
                ATTR(@akey, @aval);
                    end
                    begin
            @act = 10;		end
                end
                end
                end
                if _goto_level <= _again
                case HpricotScanner.hpricot_scan_to_state_actions[@cs] 
                when 66 then
                    begin
            #@ts = nil;		end
            @ts = -1;		end
                end

                @p = @p + 1
                if @p != pe -1
                    _goto_level = _resume
                    next
                end
                end
                if _goto_level <= _test_eof
                if @p == @eof
                if HpricotScanner.hpricot_scan_eof_trans[@cs] > 0
                    _trans = HpricotScanner.hpricot_scan_eof_trans[@cs] - 1;
                    _goto_level = _eof_trans
                    next;
                end
                end

                end
                if _goto_level <= _out
                    break
                end
            end
                end

            if @cs == HpricotScanner.hpricot_scan_error then
                raise Hpricot::ParseError, @tag[0].nil? ? 
                    "parse error on line #{@curline}\n#{NO_WAY_SERIOUSLY}" :
                    "parse error on element <#{@tag.to_s}>, starting on line #{@curline}.\n#{NO_WAY_SERIOUSLY}"
            end

            if @done and @ele_open then
                @ele_open = false
                if @ts > -1 then
                    @mark_tag = @ts
                    @ts = -1
                    @text = true
                end
            end

            if @ts == -1 then
                @buf = ''
                @have = 0
                if @mark_tag != -1 and @text then
                    if @done then
                        if @mark_tag < @p - 1 then
                            CAT(@tag, @p - 1)
                            ELE(:text)
                        end
                    else
                        CAT(@tag, @p)
                    end
                end
                @mark_tag = 0
            else
                @have = pe - @ts
                @buf  = @buf[@ts, @have]
                SLIDE(@tag)
                SLIDE(@akey)
                SLIDE(@aval)
                @te = @te - @ts
                @ts = 0
            end

            nil

        end
    end
end

